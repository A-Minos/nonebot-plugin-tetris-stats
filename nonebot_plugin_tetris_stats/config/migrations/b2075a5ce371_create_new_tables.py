"""create new tables

迁移 ID: b2075a5ce371
父迁移: 766cc7e75a62
创建时间: 2025-07-17 22:57:32.245327

"""

from __future__ import annotations

from typing import TYPE_CHECKING

import sqlalchemy as sa
from alembic import op

if TYPE_CHECKING:
    from collections.abc import Sequence

revision: str = 'b2075a5ce371'
down_revision: str | Sequence[str] | None = '766cc7e75a62'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade(name: str = '') -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'nb_t_bind',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('game_platform', sa.String(length=32), nullable=False),
        sa.Column('game_account', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_nb_t_bind')),
        info={'bind_key': 'nonebot_plugin_tetris_stats'},
    )
    with op.batch_alter_table('nb_t_bind', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_nb_t_bind_user_id'), ['user_id'], unique=False)

    op.create_table(
        'nb_t_io_hist_data',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_unique_identifier', sa.String(length=24), nullable=False),
        sa.Column('api_type', sa.String(length=32), nullable=False),
        sa.Column('data', sa.JSON(), nullable=False),
        sa.Column('update_time', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_nb_t_io_hist_data')),
        info={'bind_key': 'nonebot_plugin_tetris_stats'},
    )
    with op.batch_alter_table('nb_t_io_hist_data', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_nb_t_io_hist_data_api_type'), ['api_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_nb_t_io_hist_data_update_time'), ['update_time'], unique=False)
        batch_op.create_index(
            batch_op.f('ix_nb_t_io_hist_data_user_unique_identifier'), ['user_unique_identifier'], unique=False
        )

    op.create_table(
        'nb_t_io_tl_stats',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('update_time', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_nb_t_io_tl_stats')),
        info={'bind_key': 'nonebot_plugin_tetris_stats'},
    )
    with op.batch_alter_table('nb_t_io_tl_stats', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_nb_t_io_tl_stats_update_time'), ['update_time'], unique=False)

    op.create_table(
        'nb_t_io_u_cfg',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('query_template', sa.String(length=2), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_nb_t_io_u_cfg')),
        info={'bind_key': 'nonebot_plugin_tetris_stats'},
    )
    op.create_table(
        'nb_t_top_hist_data',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_unique_identifier', sa.String(length=24), nullable=False),
        sa.Column('api_type', sa.String(length=16), nullable=False),
        sa.Column('data', sa.JSON(), nullable=False),
        sa.Column('update_time', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_nb_t_top_hist_data')),
        info={'bind_key': 'nonebot_plugin_tetris_stats'},
    )
    with op.batch_alter_table('nb_t_top_hist_data', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_nb_t_top_hist_data_api_type'), ['api_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_nb_t_top_hist_data_update_time'), ['update_time'], unique=False)
        batch_op.create_index(
            batch_op.f('ix_nb_t_top_hist_data_user_unique_identifier'), ['user_unique_identifier'], unique=False
        )

    op.create_table(
        'nb_t_tos_hist_data',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_unique_identifier', sa.String(length=24), nullable=False),
        sa.Column('api_type', sa.String(length=16), nullable=False),
        sa.Column('data', sa.JSON(), nullable=False),
        sa.Column('update_time', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_nb_t_tos_hist_data')),
        info={'bind_key': 'nonebot_plugin_tetris_stats'},
    )
    with op.batch_alter_table('nb_t_tos_hist_data', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_nb_t_tos_hist_data_api_type'), ['api_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_nb_t_tos_hist_data_update_time'), ['update_time'], unique=False)
        batch_op.create_index(
            batch_op.f('ix_nb_t_tos_hist_data_user_unique_identifier'), ['user_unique_identifier'], unique=False
        )

    op.create_table(
        'nb_t_trigger_hist_v2',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('trigger_time', sa.DateTime(), nullable=False),
        sa.Column('session_persist_id', sa.Integer(), nullable=False),
        sa.Column('game_platform', sa.String(length=32), nullable=False),
        sa.Column('command_type', sa.String(length=16), nullable=False),
        sa.Column('command_args', sa.JSON(), nullable=False),
        sa.Column('finish_time', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_nb_t_trigger_hist_v2')),
        info={'bind_key': 'nonebot_plugin_tetris_stats'},
    )
    with op.batch_alter_table('nb_t_trigger_hist_v2', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_nb_t_trigger_hist_v2_command_type'), ['command_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_nb_t_trigger_hist_v2_game_platform'), ['game_platform'], unique=False)

    op.create_table(
        'nb_t_io_tl_hist',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('request_id', sa.Uuid(), nullable=False),
        sa.Column('data', sa.JSON(), nullable=False),
        sa.Column('update_time', sa.DateTime(), nullable=False),
        sa.Column('stats_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['stats_id'], ['nb_t_io_tl_stats.id'], name=op.f('fk_nb_t_io_tl_hist_stats_id_nb_t_io_tl_stats')
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_nb_t_io_tl_hist')),
        info={'bind_key': 'nonebot_plugin_tetris_stats'},
    )
    with op.batch_alter_table('nb_t_io_tl_hist', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_nb_t_io_tl_hist_request_id'), ['request_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_nb_t_io_tl_hist_update_time'), ['update_time'], unique=False)

    op.create_table(
        'nb_t_io_tl_stats_field',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('rank', sa.String(length=2), nullable=False),
        sa.Column('tr_line', sa.Float(), nullable=False),
        sa.Column('player_count', sa.Integer(), nullable=False),
        sa.Column('low_pps', sa.JSON(), nullable=False),
        sa.Column('low_apm', sa.JSON(), nullable=False),
        sa.Column('low_vs', sa.JSON(), nullable=False),
        sa.Column('avg_pps', sa.Float(), nullable=False),
        sa.Column('avg_apm', sa.Float(), nullable=False),
        sa.Column('avg_vs', sa.Float(), nullable=False),
        sa.Column('high_pps', sa.JSON(), nullable=False),
        sa.Column('high_apm', sa.JSON(), nullable=False),
        sa.Column('high_vs', sa.JSON(), nullable=False),
        sa.Column('stats_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['stats_id'], ['nb_t_io_tl_stats.id'], name=op.f('fk_nb_t_io_tl_stats_field_stats_id_nb_t_io_tl_stats')
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_nb_t_io_tl_stats_field')),
        info={'bind_key': 'nonebot_plugin_tetris_stats'},
    )
    with op.batch_alter_table('nb_t_io_tl_stats_field', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_nb_t_io_tl_stats_field_rank'), ['rank'], unique=False)

    # ### end Alembic commands ###


def downgrade(name: str = '') -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('nb_t_io_tl_stats_field', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_nb_t_io_tl_stats_field_rank'))

    op.drop_table('nb_t_io_tl_stats_field')
    with op.batch_alter_table('nb_t_io_tl_hist', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_nb_t_io_tl_hist_update_time'))
        batch_op.drop_index(batch_op.f('ix_nb_t_io_tl_hist_request_id'))

    op.drop_table('nb_t_io_tl_hist')
    with op.batch_alter_table('nb_t_trigger_hist_v2', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_nb_t_trigger_hist_v2_game_platform'))
        batch_op.drop_index(batch_op.f('ix_nb_t_trigger_hist_v2_command_type'))

    op.drop_table('nb_t_trigger_hist_v2')
    with op.batch_alter_table('nb_t_tos_hist_data', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_nb_t_tos_hist_data_user_unique_identifier'))
        batch_op.drop_index(batch_op.f('ix_nb_t_tos_hist_data_update_time'))
        batch_op.drop_index(batch_op.f('ix_nb_t_tos_hist_data_api_type'))

    op.drop_table('nb_t_tos_hist_data')
    with op.batch_alter_table('nb_t_top_hist_data', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_nb_t_top_hist_data_user_unique_identifier'))
        batch_op.drop_index(batch_op.f('ix_nb_t_top_hist_data_update_time'))
        batch_op.drop_index(batch_op.f('ix_nb_t_top_hist_data_api_type'))

    op.drop_table('nb_t_top_hist_data')
    op.drop_table('nb_t_io_u_cfg')
    with op.batch_alter_table('nb_t_io_tl_stats', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_nb_t_io_tl_stats_update_time'))

    op.drop_table('nb_t_io_tl_stats')
    with op.batch_alter_table('nb_t_io_hist_data', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_nb_t_io_hist_data_user_unique_identifier'))
        batch_op.drop_index(batch_op.f('ix_nb_t_io_hist_data_update_time'))
        batch_op.drop_index(batch_op.f('ix_nb_t_io_hist_data_api_type'))

    op.drop_table('nb_t_io_hist_data')
    with op.batch_alter_table('nb_t_bind', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_nb_t_bind_user_id'))

    op.drop_table('nb_t_bind')
    # ### end Alembic commands ###
