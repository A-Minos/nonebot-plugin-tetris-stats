"""init db

修订 ID: 134153ebc681
父修订:
创建时间: 2023-10-21 22:14:03.714641

"""
from __future__ import annotations

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

revision: str = '134153ebc681'
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = ('nonebot_plugin_tetris_stats',)
depends_on: str | Sequence[str] | None = None


def upgrade(name: str = '') -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'nonebot_plugin_tetris_stats_bind',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('qq_number', sa.String(), nullable=False),
        sa.Column('IO_id', sa.String(), nullable=True),
        sa.Column('TOP_id', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_nonebot_plugin_tetris_stats_bind')),
    )
    with op.batch_alter_table(
        'nonebot_plugin_tetris_stats_bind', schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_nonebot_plugin_tetris_stats_bind_qq_number'),
            ['qq_number'],
            unique=False,
        )

    op.create_table(
        'nonebot_plugin_tetris_stats_historicaldata',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('trigger_time', sa.DateTime(), nullable=False),
        sa.Column('bot_platform', sa.String(length=32), nullable=False),
        sa.Column('bot_id', sa.String(length=64), nullable=False),
        sa.Column('source_type', sa.String(length=32), nullable=False),
        sa.Column('source_id', sa.String(length=64), nullable=False),
        sa.Column('message', sa.String(), nullable=False),
        sa.Column('message_id', sa.String(length=64), nullable=False),
        sa.Column('game_type', sa.String(length=16), nullable=False),
        sa.Column('command_type', sa.String(length=16), nullable=False),
        sa.Column('command_args', sa.JSON(), nullable=False),
        sa.Column('game_user', sa.JSON(), nullable=False),
        sa.Column('processed_data', sa.JSON(), nullable=False),
        sa.Column('return_message', sa.LargeBinary(), nullable=False),
        sa.Column('finish_time', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint(
            'id', name=op.f('pk_nonebot_plugin_tetris_stats_historicaldata')
        ),
    )
    with op.batch_alter_table(
        'nonebot_plugin_tetris_stats_historicaldata', schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_nonebot_plugin_tetris_stats_historicaldata_command_type'),
            ['command_type'],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f('ix_nonebot_plugin_tetris_stats_historicaldata_game_type'),
            ['game_type'],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f('ix_nonebot_plugin_tetris_stats_historicaldata_source_id'),
            ['source_id'],
            unique=False,
        )

    # ### end Alembic commands ###


def downgrade(name: str = '') -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table(
        'nonebot_plugin_tetris_stats_historicaldata', schema=None
    ) as batch_op:
        batch_op.drop_index(
            batch_op.f('ix_nonebot_plugin_tetris_stats_historicaldata_source_id')
        )
        batch_op.drop_index(
            batch_op.f('ix_nonebot_plugin_tetris_stats_historicaldata_game_type')
        )
        batch_op.drop_index(
            batch_op.f('ix_nonebot_plugin_tetris_stats_historicaldata_command_type')
        )

    op.drop_table('nonebot_plugin_tetris_stats_historicaldata')
    with op.batch_alter_table(
        'nonebot_plugin_tetris_stats_bind', schema=None
    ) as batch_op:
        batch_op.drop_index(batch_op.f('ix_nonebot_plugin_tetris_stats_bind_qq_number'))

    op.drop_table('nonebot_plugin_tetris_stats_bind')
    # ### end Alembic commands ###
